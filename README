In business or technical terms describe your understanding of continuous integration and continuous delivery (CI/CD)? What are some tools that are used for this and why are they used.

Continuous integration (CI) refers to automating the integration of code changes from multiple contributors into a single software project. In simple terms, all individuals submit code to a shared build repository and these code changes are validated through automated tests against the build. It’s a solution to having many branches in development that could conflict or integration risks when waiting for release to merge changes. Ultimately, CI leads to greater collaboration, code quality and efficiency. Continuous delivery (CD) acts as an extension of CI, where the code changes that are made by development are automatically bug tested and uploaded to a repository, where they can be deployed to a testing and/or live production environment after the building phase. CD can lead to faster builds and a better time-to-market. CI/CD aims to support ongoing automation and continuous monitoring within the lifecycle of apps and works well with agile methodologies, ultimately aiming to minimise disruption.

There are various tools which can be used for CI/CD. One of the most widely used tools in CI/CD is Jenkins, which can be used as a simple CI server or turned into the continuous delivery hub for any project. It is widely used for the main reasons being that it is a great tool for on-premise solutions, it is easy to install and configure, and is open-source, so can be widely extensible. If the business operates on the cloud, there are options such as Bitbucket Pipelines, which is a cloud version control system offered by Atlassian. It’s widely used if the project is already on Bitbucket, and other reasons for use include its easy setup and configuration, as well as its seamless integration with Jira, assisting in communication. Additionally, there are tools that work for both on-premise and on-cloud solutions, such as CircleCI. CircleCI is a tool that works well with GitHub, and is widely used mainly due to its flexibility to support a matrix of version control systems, container systems, and delivery mechanisms. Other features include performance optimisation for quick builds and analytics to measure build performance. There are many different tools that a business can use for its projects, and the tool used will depend on the budget and requirements of the project.

Links:
- https://www.redhat.com/en/topics/devops/what-is-ci-cd#ci/cd-tools
- https://www.atlassian.com/continuous-delivery/continuous-integration/tools
- https://www.youtube.com/watch?v=scEDHsr3APg&ab_channel=Fireship
- https://www.atlassian.com/continuous-delivery/principles/continuous-integration-vs-delivery-vs-deployment
- https://www.jenkins.io/
